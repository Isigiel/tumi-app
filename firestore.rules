rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin(){
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    }

    function isEditor() {
      return isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isEditor == true
    }

    function isTutor() {
        return isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isTutor == true
    }

    match /events/{event} {
      allow read: if resource.data.isVisiblePublicly == true || request.auth.uid != null;
      allow write: if isEditor();
      match /signups/{signup} {
        allow write: if isAdmin();
        allow update: if isTutor();
        allow read: if get(/databases/$(database)/documents/events/$(event)).data.isVisiblePublicly == true;
      }
    }

    match /users/{user} {
      allow read: if isTutor();
      allow read, update: if request.auth.uid == resource.data.id;
      allow write: if isAdmin();
    }

    match /stats/money {
      allow read: if isAdmin();
      match /transactions/{transaction} {
        allow read, write: if isAdmin();
      }
    }

    match /stats/events {
      allow read: if isTutor();
      match /items/{item} {
        allow read: if isAdmin();
      }
    }

    match /stats/users {
          allow read: if isTutor();
          match /items/{item} {
            allow read: if isAdmin();
          }
        }

    match /{path=**}/signups/{signup} {
      allow read: if request.auth.uid == resource.data.id || isTutor();
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
